import os
import random
import time
import sys

import numpy
import django
from django.conf import settings

file_path = os.path.abspath(__file__)
base_dir = os.path.dirname(file_path)
sys.path.insert(0, os.path.join(os.path.dirname(base_dir)))

from manage import set_django_module

if not os.getenv('DJANGO_SETTINGS_MODULE'):
    set_django_module(environment='dev')
    django.setup()

import logging
logger = logging.getLogger('receive')


def get_export_data(file_path=settings.API_SETTINGS.EXPORT_PATH, **kwargs):
    """读取excel数据"""
    import pandas as pd
    import numpy
    data = pd.read_excel(file_path, 'areas')
    area_dict = {}
    for i in data.index:
        ret = (dict(data.loc[i]))
        area_dict[ret['编号']] = ret['短名称']
    print(area_dict)
    camera_data = pd.read_excel(file_path, 'camera')
    for i in camera_data.index:
        area_code = camera_data.loc[i].area_code
        if isinstance(area_code, (numpy.int64, int)):
            # print(area_code)
            camera_data.loc[camera_data.area_code == area_code, 'area_code'] = area_dict[area_code]


# from events.models import AlarmEvent, EventWorkSheet, DeviceAlarmEventPicture, DeviceAlarmEventCamera
#
# eve = AlarmEvent.objects.get(id=246539)
# print(eve)
#
# de = eve.devicealarmevent
# print(de)
#
# DeviceAlarmEventCamera.objects.create(
#     event=de,
#     code=1,
#     preset=2,
# )
#
# DeviceAlarmEventPicture.objects.create(
#     event=de,
#     address=1,
# )
#
# EventWorkSheet.objects.create(
#     work_sheet_code='x',
#     alarm_event=eve,
#     dispose_user_id=73,
#     sheet_state='unaudited',
# )
#
# sheet = eve.eventworksheet_set.all()
# print(sheet)
#
# print(de.devicealarmeventcamera_set.all())
# print(de.devicealarmeventpicture_set.all())
# print(de.deployalarmrecord)

# EventWorkSheet.objects.all().update(alarm_event=eve)
# 246540

def log_test():
    x = 0
    while True:
        x += 1
        logger.info('日志写入测试:%s', x)
        time.sleep(0.0001)


if __name__ == '__main__':
    log_test()
