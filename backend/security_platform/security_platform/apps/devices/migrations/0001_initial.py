# Generated by Django 2.2.4 on 2021-06-01 10:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('situations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('area_code', models.CharField(blank=True, max_length=50, verbose_name='所属区域')),
                ('device_type', models.CharField(choices=[('cctv', '视频监控设备'), ('enclosure', '围界设备'), ('access_control', '门禁设备'), ('fire', '消防设备'), ('alarm', '隐蔽报警设备'), ('passage_way', '道口设备')], max_length=20, verbose_name='类型')),
                ('belong_system', models.CharField(choices=[('ZVAMS', '视频分析系统'), ('VMS', '视频监控系统'), ('ACS', '门禁系统'), ('CMS', '道口系统'), ('AIS', '围界系统'), ('XFHZ', '消防系统'), ('YBBJ', '隐蔽报警系统')], db_index=True, max_length=5, verbose_name='所属系统')),
                ('device_state', models.CharField(choices=[('normal', '正常'), ('trouble_open', '故障'), ('trouble_off', '故障恢复')], default='normal', max_length=20, verbose_name='设备状态')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='逻辑删除')),
                ('device_code', models.CharField(max_length=200, unique=True, verbose_name='设备编码')),
                ('device_name', models.CharField(db_index=True, max_length=60, verbose_name='设备名称')),
                ('device_type_id', models.CharField(blank=True, max_length=36, verbose_name='设备类型编码')),
                ('device_type_id_son', models.CharField(blank=True, max_length=36, verbose_name='设备子类型编码')),
                ('device_type_name', models.CharField(blank=True, max_length=60, verbose_name='设备类型名称')),
                ('floor_code', models.CharField(blank=True, max_length=50, verbose_name='所属楼层')),
                ('ipv4', models.CharField(blank=True, max_length=20, verbose_name='IPv4')),
                ('port', models.CharField(blank=True, max_length=10, verbose_name='端口')),
                ('switches', models.CharField(blank=True, max_length=100, verbose_name='交换机')),
                ('manufacturer', models.CharField(blank=True, max_length=100, verbose_name='厂家')),
                ('device_model', models.CharField(blank=True, max_length=100, verbose_name='型号')),
                ('trouble_message', models.CharField(blank=True, max_length=30, verbose_name='设备故障信息')),
                ('trouble_time', models.DateTimeField(blank=True, null=True, verbose_name='设备故障时间')),
                ('trouble_code', models.CharField(blank=True, max_length=30, verbose_name='设备故障错误码')),
                ('install_location_detail', models.CharField(blank=True, max_length=100, verbose_name='安装位置描述')),
                ('device_cad_code', models.CharField(blank=True, max_length=100, verbose_name='安装工程码')),
                ('related_camera_code', models.CharField(blank=True, max_length=200, verbose_name='关联摄像机编号')),
                ('maintenance', models.IntegerField(default=0, verbose_name='维修次数')),
                ('gis_basic_info', models.TextField(blank=True, verbose_name='gis基础信息')),
                ('gis_field', models.CharField(blank=True, max_length=100, verbose_name='gis点位信息(x,y)')),
                ('installation_time', models.DateTimeField(blank=True, null=True, verbose_name='安装时间')),
                ('initial_image', models.TextField(blank=True, null=True, verbose_name='初始图片')),
                ('service_life', models.IntegerField(blank=True, default=3, verbose_name='使用寿命')),
                ('departments', models.ManyToManyField(blank=True, related_name='device_set', related_query_name='devices', to='users.Department', verbose_name='关联部门设备权限')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subs', to='devices.DeviceInfo', verbose_name='设备主机')),
                ('resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='situations.ResourceInfo', verbose_name='航站楼资源')),
                ('users', models.ManyToManyField(blank=True, related_name='device_set', related_query_name='devices', to=settings.AUTH_USER_MODEL, verbose_name='关联用户设备权限')),
            ],
            options={
                'verbose_name': '设备',
                'verbose_name_plural': '设备',
                'db_table': 'tb_device_info',
                'index_together': {('is_deleted', 'device_type', 'device_state'), ('is_deleted', 'device_state')},
            },
        ),
        migrations.CreateModel(
            name='CameraDevice',
            fields=[
                ('deviceinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.DeviceInfo')),
                ('camera_type', models.CharField(default='枪机', max_length=10, verbose_name='摄像机类型')),
                ('is_ptz', models.BooleanField(default=False, verbose_name='是否支持ptz')),
                ('flow_address', models.CharField(blank=True, max_length=100, verbose_name='视频流地址')),
                ('flow_address_second', models.CharField(blank=True, max_length=100, verbose_name='第二码流地址')),
                ('point_angel', models.IntegerField(blank=True, null=True, verbose_name='指向角度')),
                ('visual_angel', models.IntegerField(blank=True, null=True, verbose_name='视角')),
                ('cover_radius', models.IntegerField(blank=True, null=True, verbose_name='覆盖半径')),
                ('install_height', models.IntegerField(blank=True, null=True, verbose_name='安装高度')),
            ],
            options={
                'verbose_name': '摄象机设备',
                'verbose_name_plural': '摄象机设备',
                'db_table': 'tb_camera_device',
            },
            bases=('devices.deviceinfo',),
        ),
        migrations.CreateModel(
            name='ConcealAlarmDevice',
            fields=[
                ('deviceinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.DeviceInfo')),
            ],
            options={
                'verbose_name': '隐蔽报警设备',
                'verbose_name_plural': '隐蔽报警设备',
                'db_table': 'tb_conceal_alarm_device',
            },
            bases=('devices.deviceinfo',),
        ),
        migrations.CreateModel(
            name='EntranceDevice',
            fields=[
                ('deviceinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.DeviceInfo')),
                ('door_code', models.CharField(blank=True, max_length=20, verbose_name='门代号')),
                ('door_status', models.SmallIntegerField(blank=True, null=True, verbose_name='门状态(0开,1关)')),
                ('open_or_close_time', models.DateTimeField(blank=True, null=True, verbose_name='门开启/关闭时间')),
            ],
            options={
                'verbose_name': '门禁设备',
                'verbose_name_plural': '门禁设备',
                'db_table': 'tb_entrance_device',
            },
            bases=('devices.deviceinfo',),
        ),
        migrations.CreateModel(
            name='FireDevice',
            fields=[
                ('deviceinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.DeviceInfo')),
            ],
            options={
                'verbose_name': '消防设备',
                'verbose_name_plural': '消防设备',
                'db_table': 'tb_fire_device',
            },
            bases=('devices.deviceinfo',),
        ),
        migrations.CreateModel(
            name='MaintenanceDevice',
            fields=[
                ('deviceinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.DeviceInfo')),
                ('detector_code', models.CharField(blank=True, max_length=20, verbose_name='编号')),
            ],
            options={
                'verbose_name': '围界设备',
                'verbose_name_plural': '围界设备',
                'db_table': 'tb_maintenance_device',
            },
            bases=('devices.deviceinfo',),
        ),
        migrations.CreateModel(
            name='PassageWayDevice',
            fields=[
                ('deviceinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.DeviceInfo')),
            ],
            options={
                'verbose_name': '道口设备',
                'verbose_name_plural': '道口设备',
                'db_table': 'tb_passage_way_device',
            },
            bases=('devices.deviceinfo',),
        ),
        migrations.CreateModel(
            name='WorkSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('work_sheet_code', models.CharField(max_length=20, unique=True, verbose_name='工单编号')),
                ('audit_opinion', models.TextField(blank=True, verbose_name='审核意见')),
                ('sheet_state', models.CharField(choices=[('assigned', '已指派、待维修'), ('disposed', '已处置、待审核'), ('audited', '已审核'), ('closed', '已关闭')], default='assigned', max_length=20, verbose_name='工单状态')),
                ('audit_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='audit_user', to=settings.AUTH_USER_MODEL, verbose_name='审核人')),
                ('device_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.DeviceInfo', verbose_name='设备')),
                ('dispose_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dispose_user', to=settings.AUTH_USER_MODEL, verbose_name='处置人')),
            ],
            options={
                'verbose_name': '工单流程记录',
                'verbose_name_plural': '工单流程记录',
                'db_table': 'tb_work_sheet',
            },
        ),
        migrations.CreateModel(
            name='DeviceStateHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_state', models.CharField(max_length=20, verbose_name='设备变更状态')),
                ('state_change_time', models.DateTimeField(verbose_name='设备状态变更时间')),
                ('device_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.DeviceInfo', verbose_name='设备')),
            ],
            options={
                'verbose_name': '设备状态记录',
                'verbose_name_plural': '设备状态记录',
                'db_table': 'tb_device_stated_history',
            },
        ),
        migrations.CreateModel(
            name='DeviceMaintenanceRecords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_change_device', models.BooleanField(default=False, verbose_name='是否更换设备')),
                ('operate_time', models.DateTimeField(verbose_name='维修时间')),
                ('operate_person', models.CharField(max_length=20, verbose_name='维修人')),
                ('operate_records', models.CharField(max_length=50, verbose_name='维修记录')),
                ('note', models.CharField(blank=True, max_length=50, verbose_name='备注')),
                ('image', models.TextField(blank=True, null=True, verbose_name='图片')),
                ('audit_state', models.CharField(choices=[('unaudited', '待审核'), ('approved', '已通过'), ('unapproved', '未通过')], default='unaudited', max_length=20, verbose_name='工单状态')),
                ('device_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.DeviceInfo', verbose_name='设备')),
                ('work_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.WorkSheet', verbose_name='设备维修工单')),
            ],
            options={
                'verbose_name': '设备安装维修记录',
                'verbose_name_plural': '设备安装维修记录',
                'db_table': 'tb_device_maintenance_records',
            },
        ),
        migrations.CreateModel(
            name='DeviceLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=50, verbose_name='标签名称')),
                ('keywords', models.CharField(max_length=50, verbose_name='检索关键字')),
                ('content', models.TextField(verbose_name='标签内容')),
                ('color', models.CharField(max_length=10, verbose_name='标签颜色代码')),
                ('devices', models.ManyToManyField(blank=True, related_name='label_set', related_query_name='label', to='devices.DeviceInfo', verbose_name='关联设备')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='创建用户')),
            ],
            options={
                'verbose_name': '设备标签',
                'verbose_name_plural': '设备标签',
                'db_table': 'tb_device_label',
                'unique_together': {('name', 'user')},
            },
        ),
        migrations.CreateModel(
            name='DeviceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=50, verbose_name='分组名称')),
                ('description', models.TextField(blank=True, verbose_name='分组说明')),
                ('devices', models.ManyToManyField(blank=True, related_name='group_set', related_query_name='group', to='devices.DeviceInfo', verbose_name='关联设备')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='创建用户')),
            ],
            options={
                'verbose_name': '设备分组',
                'verbose_name_plural': '设备分组',
                'db_table': 'tb_device_group',
                'unique_together': {('name', 'user')},
            },
        ),
    ]
