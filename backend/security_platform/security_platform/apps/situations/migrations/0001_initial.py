# Generated by Django 2.2.4 on 2021-06-01 10:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('three_code', models.CharField(max_length=3, unique=True, verbose_name='机场三字码')),
                ('four_code', models.CharField(max_length=4, unique=True, verbose_name='机场四字码')),
                ('property', models.CharField(max_length=3, verbose_name='机场属性')),
                ('ch_description', models.CharField(max_length=70, verbose_name='中文描述')),
                ('inter_description', models.CharField(max_length=70, null=True, verbose_name='英文描述')),
                ('is_open', models.CharField(max_length=1, null=True, verbose_name='该通航机场是否开启(O,C)')),
                ('alias', models.CharField(max_length=10, null=True, verbose_name='机场简称')),
                ('country_code', models.CharField(max_length=3, null=True, verbose_name='国家代码')),
                ('city_code', models.CharField(max_length=3, null=True, verbose_name='城市代码')),
                ('lat', models.FloatField(null=True, verbose_name='机场纬度')),
                ('lon', models.FloatField(null=True, verbose_name='机场经度')),
            ],
            options={
                'verbose_name': '机场信息',
                'verbose_name_plural': '机场信息',
                'db_table': 'airport',
            },
        ),
        migrations.CreateModel(
            name='FlightCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('second_code', models.CharField(max_length=5, unique=True, verbose_name='航空公司二字码')),
                ('three_code', models.CharField(max_length=5, null=True, verbose_name='航空公司三字码')),
                ('property', models.CharField(max_length=5, null=True, verbose_name='航空公司属性')),
                ('ch_description', models.CharField(max_length=40, null=True, verbose_name='中文描述')),
                ('inter_description', models.CharField(max_length=40, null=True, verbose_name='英文描述')),
                ('country_code', models.CharField(max_length=10, null=True, verbose_name='国家代码')),
                ('terminal', models.CharField(max_length=10, null=True, verbose_name='所在航站楼')),
                ('company_group', models.CharField(max_length=25, null=True, verbose_name='航空公司联盟')),
            ],
            options={
                'verbose_name': '航空公司',
                'verbose_name_plural': '航空公司',
                'db_table': 'flight_company',
            },
        ),
        migrations.CreateModel(
            name='FlightException',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('errcode', models.CharField(max_length=10, unique=True, verbose_name='错误码')),
                ('ch_description', models.CharField(max_length=100, null=True, verbose_name='中文错误描述')),
                ('inter_description', models.CharField(max_length=100, null=True, verbose_name='英文错误描述')),
                ('errcode_belong', models.CharField(max_length=10, null=True, verbose_name='所属异常原因类别')),
                ('is_type', models.CharField(max_length=10, null=True, verbose_name='是否是异常原因类别 (n是,y不是)')),
                ('errcode_type', models.CharField(max_length=5, null=True, verbose_name='异常原因分类')),
            ],
            options={
                'verbose_name': '航班异常',
                'verbose_name_plural': '航班异常',
                'db_table': 'flight_exception',
            },
        ),
        migrations.CreateModel(
            name='FlightInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('fl_id', models.CharField(max_length=10, unique=True, verbose_name='航班唯一标示')),
                ('ff_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='航班标识')),
                ('mf_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='主航班标识')),
                ('mf_fi', models.CharField(blank=True, max_length=50, null=True, verbose_name='主航班标识2')),
                ('fl_tk', models.CharField(blank=True, max_length=50, null=True, verbose_name='航班任务')),
                ('flight_number', models.CharField(max_length=20, verbose_name='航班号')),
                ('company', models.CharField(max_length=10, verbose_name='航空公司标识')),
                ('execution_date', models.DateField(verbose_name='航班执行日期(进港降落，出港起飞)')),
                ('arrival_departure_flag', models.CharField(choices=[('A', '进港'), ('D', '离港')], max_length=1, verbose_name='进出港标志（D-出港；A-进港）')),
                ('flight_property', models.CharField(max_length=10, verbose_name='航班属性（INT-国际；DOM-国内；REG-地区；MIX-混合）')),
                ('flight_state', models.CharField(blank=True, max_length=10, null=True, verbose_name='航班进展状态(ARR-到达；DEP-起飞；BOR-登机；POK-结束登机)')),
                ('exception_status', models.CharField(blank=True, max_length=10, null=True, verbose_name='异常状态')),
                ('exception_reason_father', models.CharField(blank=True, max_length=10, null=True, verbose_name='异常原因父类')),
                ('exception_reason_son', models.CharField(blank=True, max_length=10, null=True, verbose_name='异常原因子类')),
                ('start_boarding_time', models.DateTimeField(blank=True, null=True, verbose_name='开始登机时间')),
                ('end_boarding_time', models.DateTimeField(blank=True, null=True, verbose_name='结束登机时间')),
                ('takeoff_iata', models.CharField(blank=True, max_length=10, verbose_name='起飞航站（IATA码）')),
                ('stopover_iata', models.CharField(blank=True, max_length=20, null=True, verbose_name='经停站（多个用逗号隔开）')),
                ('destination_iata', models.CharField(blank=True, max_length=10, verbose_name='目的航站（IATA码）')),
                ('terminal_info', models.CharField(blank=True, max_length=10, null=True, verbose_name='国内航站楼编号')),
                ('inter_terminal_info', models.CharField(blank=True, max_length=10, null=True, verbose_name='国际航站楼编号')),
                ('plan_takeoff', models.DateTimeField(blank=True, null=True, verbose_name='计划起飞时间')),
                ('plan_arrival', models.DateTimeField(blank=True, null=True, verbose_name='计划到达时间')),
                ('estimate_takeoff', models.DateTimeField(blank=True, null=True, verbose_name='预计起飞时间')),
                ('estimate_arrival', models.DateTimeField(blank=True, null=True, verbose_name='预计到达时间')),
                ('actual_takeoff', models.DateTimeField(blank=True, null=True, verbose_name='实际起飞时间')),
                ('actual_arrive', models.DateTimeField(blank=True, null=True, verbose_name='实际到达时间')),
            ],
            options={
                'verbose_name': '航班信息',
                'verbose_name_plural': '航班信息',
                'db_table': 'tb_flight_info',
            },
        ),
        migrations.CreateModel(
            name='FlightResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_start_time', models.DateTimeField(verbose_name='预计开始使用时间')),
                ('plan_end_time', models.DateTimeField(verbose_name='预计结束使用时间')),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='实际开始使用时间')),
                ('actual_end_time', models.DateTimeField(blank=True, null=True, verbose_name='实际结束使用时间')),
                ('is_using', models.BooleanField(db_index=True, default=False, verbose_name='是否使用中')),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='situations.FlightInfo', verbose_name='航班信息')),
            ],
            options={
                'verbose_name': '航班资源信息',
                'verbose_name_plural': '航班资源信息',
                'db_table': 'tb_flight_resource',
            },
        ),
        migrations.CreateModel(
            name='PassageWayCarPassThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('passageway_name', models.CharField(max_length=20, verbose_name='道口名称')),
                ('passageway_device_code', models.CharField(max_length=200, verbose_name='道口设备编码')),
                ('passage_time', models.DateTimeField(verbose_name='通行时间')),
                ('car_number', models.CharField(max_length=20, verbose_name='车牌号')),
                ('direction', models.SmallIntegerField(choices=[(0, '驶入'), (1, '驶离')], verbose_name='进出方向')),
                ('car_number_image_url', models.CharField(blank=True, max_length=200, verbose_name='车牌号图片地址')),
                ('car_positive_image_url', models.CharField(blank=True, max_length=200, verbose_name='车辆正面图片地址')),
                ('car_bottom_image_url', models.CharField(blank=True, max_length=200, verbose_name='车牌底部图片地址')),
                ('is_allowed', models.BooleanField(default=True, verbose_name='是否允许通行')),
            ],
            options={
                'verbose_name': '道口车辆通行信息',
                'verbose_name_plural': '道口车辆通行信息',
                'db_table': 'tb_passage_way_car_pass_through',
            },
        ),
        migrations.CreateModel(
            name='ResourceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('flight_sys_id', models.CharField(blank=True, max_length=14, null=True, unique=True, verbose_name='航班系统ID')),
                ('flight_sys_number', models.CharField(blank=True, max_length=16, verbose_name='航班系统编号')),
                ('flight_sys_statue', models.CharField(blank=True, max_length=5, verbose_name='航班系统状态（C-停用；O-可用）')),
                ('chinese_desc', models.CharField(blank=True, max_length=64, verbose_name='中文描述')),
                ('english_desc', models.CharField(blank=True, max_length=64, verbose_name='英文描述')),
                ('nature', models.CharField(default='国内', max_length=10, verbose_name='属性（国际、国内、地区、混合）')),
                ('terminal_number', models.CharField(blank=True, max_length=5, verbose_name='航站楼编号')),
                ('exit_number', models.CharField(blank=True, max_length=10, verbose_name='到达出口号')),
                ('name', models.CharField(db_index=True, max_length=20, verbose_name='资源名称')),
                ('resource_type', models.CharField(choices=[('passageway', '航站楼出入口'), ('counter', '值机柜台'), ('security', '安检口'), ('boarding', '登机口'), ('reverse', '反向通道'), ('baggage', '行李转盘'), ('placement', '机位'), ('security_hall', '安检大厅'), ('maintenance', '围界'), ('crossing', '道口'), ('park', '停车场')], db_index=True, max_length=20, verbose_name='一级资源分类')),
                ('resource_type_sec', models.CharField(blank=True, choices=[('entrance', '航站楼入口'), ('exit', '航站楼出口'), ('FP', '远机位'), ('NP', '近机位')], db_index=True, max_length=20, verbose_name='二级资源分类')),
                ('flights', models.ManyToManyField(blank=True, related_name='flight_set', related_query_name='flights', through='situations.FlightResource', to='situations.FlightInfo', verbose_name='关联航班信息')),
            ],
            options={
                'verbose_name': '航站楼资源信息',
                'verbose_name_plural': '航站楼资源信息',
                'db_table': 'tb_resource_info',
                'unique_together': {('resource_type', 'name')},
            },
        ),
        migrations.AddField(
            model_name='flightresource',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='situations.ResourceInfo', verbose_name='资源信息'),
        ),
    ]
